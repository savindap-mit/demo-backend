##
on: 
  workflow_dispatch:
  push:
    branches:
      - main
     # - 'feature/*'
  pull_request:
    types:  
      - closed
    branches:
      - develop
#####
#####

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
    Unit-Testing: 
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v4
      # - uses: actions/setup-java@v4
      #   with:
      #     distribution: 'temurin'
      #     java-version: '17'
      #     cache: 'maven'
      - name: Build with and test
        run:  echo "Hello World ${{ github.ref_name }} "
      # - name: Upload Test Results
      #   if: always() # Ensures the step runs even if tests fail
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: test-results
      #     path: target/surefire-reports/
      # - name: Count Failures and Decide
      #   run: |
      #     FAILURES=$(grep -oP 'failures="\K\d+' target/surefire-reports/*.xml | awk '{s+=$1} END {print s}')
      #     echo "Total Failures: $FAILURES"
      #     if [ "$FAILURES" -gt 2 ]; then
      #         echo "Too many test failures ($FAILURES). Failing the pipeline."
      #         exit 1
      #     else
      #         echo "Test failures within allowed limit ($FAILURES)."
      #     fi
    # SAST-SonarCloud:
    #   runs-on: ubuntu-latest
    #   steps:
    #     - uses: actions/checkout@v4
    #       with:
    #         fetch-depth: 0
    #     - uses: actions/setup-java@v4
    #       with:
    #         distribution: 'temurin'
    #         java-version: '17'
    #         cache: 'maven'
    #     - name: Build with Maven
    #       run: mvn -B package --file pom.xml
    #     - name: SonarCloud Scan
    #       uses: sonarsource/sonarcloud-github-action@v2.3.0
    #       env:
    #         SONAR_TOKEN:  ${{ secrets.SONAR_TOKEN }}
    # Build-and-Push-Image:
    #   runs-on: ubuntu-latest
    #   needs: [SAST-SonarCloud,Unit-Testing]
    #   permissions:
    #     contents: read
    #     packages: write
    #     attestations: write
    #     id-token: write
    #   steps:
    #     - name: Checkout repository
    #       uses: actions/checkout@v4
    #     - uses: actions/setup-java@v4
    #       with:
    #         distribution: 'temurin'
    #         java-version: '17'
    #         cache: 'maven'
    #     - name: Login to GitHub Container Registry
    #       uses: docker/login-action@v3
    #       with:
    #         registry: ghcr.io
    #         username: ${{ github.actor }}
    #         password: ${{ secrets.GITHUB_TOKEN }}
    #     - name: Build with Maven
    #       run: mvn -B package --file pom.xml 
    #     - uses: docker/build-push-action@v4
    #       with:
    #         context: .
    #         push: true
    #         tags: 'ghcr.io/${{ github.repository_owner }}/backend:${{ github.sha }}'
    # Update-Manifest:
    #   runs-on: ubuntu-latest
    #   needs: [Build-and-Push-Image]
    #   steps:
    #     - name: Checkout Manifest Repository
    #       uses: actions/checkout@v4
    #       with:
    #         repository: savindap-mit/demo-argocd
    #         token: ${{ secrets.PAT }}
    #         path: manifests
    #     - name: List
    #       run:  ls -al 
    #     - name: Change the Version
    #       run: |
    #         cd manifests/manifest/backend
    #         ls -al
    #         sed -i 's|image:.*|image: ghcr.io/savindap-mit/backend:'${{ github.sha }}'|' deployment.yaml
    #         git config --global user.name 'Integrations User'
    #         git config --global user.email 'actions@mitesp.com'
    #         git add deployment.yaml
    #         git commit -m "Update backend.yaml"
    #         git push




###### Archieve

      
        # - name: Extract metadata (tags, labels) for Docker
        #   id: meta
        #   uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        #   with:
        #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        # - name: Show Directory
        #   run: ls -al
        # - name: Build with Maven
        #   run: mvn -B package --file pom.xml              
        # - name: Build and push Docker image
        #   id: push
        #   uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        #   with:
        #     context: .
        #     push: true
        #     tags: ${{  steps.meta.outputs.tags }}
        #     labels: ${{ steps.meta.outputs.labels }}


