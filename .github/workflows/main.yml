#
on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
    Unit-Testing: 
      runs-on: self-hosted
      steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      # - name: Build with Maven
      #   run: mvn -B test --file pom.xml
      - name: Build with Maven cloud
        run:  mvn -B verify --file pom.xml sonar:sonar -Dsonar.projectKey=savindap-mit_demo-backend -Dsonar.organization=savindap-mit -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GIT_HUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONARCLOUD_TOKEN: ${{ secrets.SONAR_TOKEN }}
    SAST-SonarCloud:
      runs-on: self-hosted
      steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: '17'
            cache: 'maven'
        - name: Build with Maven
          run: mvn -B package --file pom.xml
        - name: SonarCloud Scan
          uses: sonarsource/sonarcloud-github-action@v2.3.0
          env:
            SONAR_TOKEN:  ${{ secrets.SONAR_TOKEN }}
    Build-and-Push-Image:
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write
        attestations: write
        id-token: write
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4
        - uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: '17'
            cache: 'maven'
        - name: Login to GitHub Container Registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: Extract metadata (tags, labels) for Docker
          id: meta
          uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
          with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        - name: Show Directory
          run: ls -al
        - name: Build with Maven
          run: mvn -B package --file pom.xml              
        - name: Build and push Docker image
          id: push
          uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
          with:
            context: .
            push: true
            tags: ${{ github.repository_owner }}/back-end:${{ github.sha }}
            labels: ${{ steps.meta.outputs.labels }}


